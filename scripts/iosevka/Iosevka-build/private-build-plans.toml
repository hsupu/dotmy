# 241230 for 32.3.0
# 241109 for 32.0.1
#
### See https://github.com/be5invis/Iosevka/blob/master/doc/custom-build.md for comprehensive
### documentation of the options in this file

# <IosevkaCustom> is your plan name
[buildPlans.IosevkaPu]
family = "Iosevka PU"           # Font family name
spacing = "normal"              # Optional; Values: `normal`, `term`, `fontconfig-mono`, or `fixed`
serifs = "sans"                 # Optional; Values: `sans` or `slab`
snapshotFamily = "Iosevka PU"
noCvSs = false
exportGlyphNames = false        # Set this to true for ligature support in Kitty (increased file size)

[buildPlans.IosevkaPuTerm]
family = "Iosevka PU Term"      # Font family name
spacing = "term"                # Optional; Values: `normal`, `term`, `fontconfig-mono`, or `fixed`
serifs = "sans"                 # Optional; Values: `sans` or `slab`
snapshotFamily = "Iosevka PU"
exportGlyphNames = false        # Set this to true for ligature support in Kitty (increased file size)

[buildPlans.IosevkaPuFixed]
family = "Iosevka PU Fixed"     # Font family name
spacing = "fixed"               # Optional; Values: `normal`, `term`, `fontconfig-mono`, or `fixed`
serifs = "sans"                 # Optional; Values: `sans` or `slab`
noLigation = true
snapshotFamily = "Iosevka PU"
exportGlyphNames = false        # Set this to true for ligature support in Kitty (increased file size)

###################################################################################################
# Configure variants

# Optional; Whether to inherit a `ss##` variant
[buildPlans.IosevkaPu.variants]
# inherits = "ss01"

# Optional; Configure single character's variant
[buildPlans.IosevkaPu.variants.design]
one = "base"
eight = "two-circles"
capital-j = "serifless"
capital-q = "crossing"
capital-s = "serifless"
capital-w = "straight-flat-top-serifless"
a = "single-storey-serifless"
f = "flat-hook-serifless-crossbar-at-x-height"
g = "single-storey-flat-hook-serifless"
i = "zshaped"
j = "flat-hook-serifed"
k = "symmetric-touching-serifless"
l = "zshaped"
t = "flat-hook-short-neck2"
w = "straight-flat-top-serifless"
y = "straight-turn-serifless"
brace = "straight" # {}
percent = "rings-continuous-slash" # %

[buildPlans.IosevkaPuTerm.variants]
inherits = "buildPlans.IosevkaPu"

[buildPlans.IosevkaPuFixed.variants]
inherits = "buildPlans.IosevkaPu"

# End variant section
###################################################################################################

###################################################################################################
# Configure ligations

[buildPlans.IosevkaPuTerm.ligations]
inherits = "clike"          # Optional; inherits an existing ligation set
disables = []               # Optional; disable specific ligation groups, overrides inherited ligation set
enables  = []               # Optional; enable specific ligation groups, overrides inherited ligation set

# End ligation section
###################################################################################################


###################################################################################################
# Override default building weights
# When buildPlans.<plan name>.weights is absent, all weights would built and mapped to
# default values.
# IMPORTANT : Currently "menu" and "css" property only support numbers between 0 and 1000.
#             and "shape" properly only supports number between 100 and 900 (inclusive).
#             If you decide to use custom weights you have to define all the weights you
#             plan to use otherwise they will not be built.

[buildPlans.IosevkaPu.weights.Regular]
shape = 400  # Weight for glyph shapes.
menu  = 400  # Weight for the font's names.
css   = 400  # Weight for webfont CSS.

[buildPlans.IosevkaPu.weights.Bold]
shape = 700
menu  = 700
css   = 700

[buildPlans.IosevkaPuTerm.weights.Regular]
shape = 400
menu  = 400
css   = 400

[buildPlans.IosevkaPuTerm.weights.Bold]
shape = 700
menu  = 700
css   = 700

[buildPlans.IosevkaPuFixed.weights.Regular]
shape = 400
menu  = 400
css   = 400

[buildPlans.IosevkaPuFixed.weights.Bold]
shape = 700
menu  = 700
css   = 700

# End weight section
###################################################################################################

###################################################################################################
# Override default building slope sets
# When this section is absent, all slopes would be built.

# [buildPlans.IosevkaPu.slopes.Upright]
# angle = 0             # Angle in degrees. Valid range [0, 15]
# shape = "upright"     # Slope grade used for shape selection.  `upright` | `oblique` | `italic`
# menu  = "upright"     # Slope grade used for naming.           `upright` | `oblique` | `italic`
# css   = "normal"      # Slope grade used for webfont CSS.      `normal`  | `oblique` | `italic`

# [buildPlans.IosevkaPu.slopes.Italic]
# angle = 9.4
# shape = "italic"
# menu  = "italic"
# css   = "italic"

# End slope section
###################################################################################################

###################################################################################################
# Override default building widths
# When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
# default values.
# IMPORTANT : Currently "shape" property only supports numbers between 434 and 664 (inclusive),
#             while "menu" only supports integers between 1 and 9 (inclusive).
#             The "shape" parameter specifies the unit width, measured in 1/1000 em. The glyphs'
#             width are equal to, or a simple multiple of the unit width.
#             If you decide to use custom widths you have to define all the widths you plan to use,
#             otherwise they will not be built.

[buildPlans.IosevkaPu.widths.Normal]
shape = 500        # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

[buildPlans.IosevkaPuTerm.widths.Normal]
shape = 500        # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

[buildPlans.IosevkaPuFixed.widths.Normal]
shape = 500        # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

# End width section
###################################################################################################

###################################################################################################
# Character Exclusion
# Specify character ranges in the section below to exclude certain characters from the font being
# built. Remove this section when this feature is not needed.

# [buildPlans.IosevkaPu.excludeChars]
# ranges = [[10003, 10008]]

# End character exclusion
###################################################################################################

###################################################################################################
# Compatibility Ligatures
# Certain applications like Emacs does not support proper programming liagtures provided by
# OpenType, but can support ligatures provided by PUA codepoints. Therefore you can edit the
# following section to build PUA characters that are generated from the OpenType ligatures.
# Remove this section when compatibility ligatures are not needed.

# [[buildPlans.IosevkaPuTerm.compatibilityLigatures]]
# unicode = 57600 # 0xE100
# featureTag = 'calt'
# sequence = '<*>'

# End compatibility ligatures section
###################################################################################################

###################################################################################################
# Metric overrides
# Certain metrics like line height (leading) could be overridden in your build plan file.
# Edit the values to change the metrics. Remove this section when overriding is not needed.

# End metric override section
###################################################################################################

[collectPlans.IosevkaPu]
release = true
from = [
	"IosevkaPu",
	"IosevkaPuTerm",
	"IosevkaPuFixed"
]
